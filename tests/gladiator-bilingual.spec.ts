import { test, expect } from '@playwright/test';

test.describe('Bilingual Gladiator Display', () => {
  const testEmail = 'testplay@kalamuth.com';
  const testPassword = 'testPassword123!';

  test.beforeEach(async ({ page }) => {
    // Start from the French homepage
    await page.goto('/fr');
  });

  test('displays gladiator content in French when locale is French', async ({ page }) => {
    // Navigate to auth page
    await page.goto('/fr/auth');

    // Login with test account
    await page.getByTestId('email-input').fill(testEmail);
    await page.getByTestId('password-input').fill(testPassword);
    await page.getByTestId('login-submit-button').click();
    
    // Wait for navigation to complete
    await page.waitForURL(/\/(fr|en)\/(server-selection|ludus-creation|initial-gladiators|dashboard)/);
    
    // If we're on server selection, complete the flow
    if (page.url().includes('server-selection')) {
      // Select a server
      await page.getByTestId('server-olympus').click();
      await page.getByTestId('select-server-button').click();
      
      // Wait for ludus creation page
      await page.waitForURL(/\/fr\/ludus-creation/);
      
      // Create a ludus
      await page.getByTestId('ludus-name-input').fill('Test Ludus FR');
      await page.getByTestId('create-ludus-button').click();
      
      // Wait for initial gladiators page
      await page.waitForURL(/\/fr\/initial-gladiators/);
    } else if (page.url().includes('dashboard')) {
      // If already onboarded, navigate to a page where gladiators are shown
      // This would need to be implemented when dashboard is ready
      // For now, we'll skip this test case
      test.skip();
      return;
    }
    
    // Verify we're on the French initial gladiators page
    await expect(page).toHaveURL(/\/fr\/initial-gladiators/);
    
    // Verify French UI labels are displayed
    await expect(page.getByRole('heading', { name: 'Rencontrez Vos Gladiateurs' })).toBeVisible();
    
    // Wait for gladiators to load (if any)
    await page.waitForTimeout(3000);
    
    // Check if there are gladiators displayed
    const gladiatorCards = page.locator('[data-testid^="gladiator-"]');
    const gladiatorCount = await gladiatorCards.count();
    
    if (gladiatorCount > 0) {
      // Click on the first gladiator to open details
      await gladiatorCards.first().click();
      
      // Verify French labels in the modal
      await expect(page.getByText('Statistiques de Combat')).toBeVisible();
      await expect(page.getByText('Force')).toBeVisible();
      await expect(page.getByText('Agilité')).toBeVisible();
      await expect(page.getByText('Vitesse')).toBeVisible();
      
      // Check for French content in gladiator details
      // Note: The actual French content will be generated by the AI
      // We're checking that the labels are in French
      await expect(page.getByText('Personnalité')).toBeVisible();
      await expect(page.getByText('Histoire')).toBeVisible();
      await expect(page.getByText('Objectif de Vie')).toBeVisible();
      
      // Close the modal
      await page.getByTestId('close-modal').click();
    }
  });

  test('displays gladiator content in English when locale is English', async ({ page }) => {
    // Navigate to English auth page
    await page.goto('/en/auth');

    // Login with test account
    await page.getByTestId('email-input').fill(testEmail);
    await page.getByTestId('password-input').fill(testPassword);
    await page.getByTestId('login-submit-button').click();
    
    // Wait for navigation to complete
    await page.waitForURL(/\/(fr|en)\/(server-selection|ludus-creation|initial-gladiators|dashboard)/);
    
    // If we're on server selection, complete the flow
    if (page.url().includes('server-selection')) {
      // Select a server
      await page.getByTestId('server-olympus').click();
      await page.getByTestId('select-server-button').click();
      
      // Wait for ludus creation page
      await page.waitForURL(/\/en\/ludus-creation/);
      
      // Create a ludus
      await page.getByTestId('ludus-name-input').fill('Test Ludus EN');
      await page.getByTestId('create-ludus-button').click();
      
      // Wait for initial gladiators page
      await page.waitForURL(/\/en\/initial-gladiators/);
    } else if (page.url().includes('dashboard')) {
      // If already onboarded, navigate to a page where gladiators are shown
      // This would need to be implemented when dashboard is ready
      // For now, we'll skip this test case
      test.skip();
      return;
    }
    
    // Verify we're on the English initial gladiators page
    await expect(page).toHaveURL(/\/en\/initial-gladiators/);
    
    // Verify English UI labels are displayed
    await expect(page.getByRole('heading', { name: 'Meet Your Gladiators' })).toBeVisible();
    
    // Wait for gladiators to load (if any)
    await page.waitForTimeout(3000);
    
    // Check if there are gladiators displayed
    const gladiatorCards = page.locator('[data-testid^="gladiator-"]');
    const gladiatorCount = await gladiatorCards.count();
    
    if (gladiatorCount > 0) {
      // Click on the first gladiator to open details
      await gladiatorCards.first().click();
      
      // Verify English labels in the modal
      await expect(page.getByText('Combat Statistics')).toBeVisible();
      await expect(page.getByText('Strength')).toBeVisible();
      await expect(page.getByText('Agility')).toBeVisible();
      await expect(page.getByText('Speed')).toBeVisible();
      
      // Check for English content in gladiator details
      await expect(page.getByText('Personality')).toBeVisible();
      await expect(page.getByText('Backstory')).toBeVisible();
      await expect(page.getByText('Life Goal')).toBeVisible();
      
      // Close the modal
      await page.getByTestId('close-modal').click();
    }
  });

  test('switches gladiator content language when locale is changed', async ({ page }) => {
    // This test would verify that switching languages updates the gladiator content
    // However, this requires implementing a language switcher on the gladiators page
    // For now, we'll mark this as TODO
    test.skip();
  });
});
